// Read current value from a multiline control (plain or rich)
function nxGetMultiline(jsVar){
  var $w = NWF$('#' + jsVar);
  if(!$w.length) return '';
  var $ta = $w.is('textarea') ? $w : $w.find('textarea').first();
  if ($ta.length) return $ta.val() || '';
  var $if = $w.find('iframe').first();
  if ($if.length){ try { return $if.contents().find('body').html() || ''; } catch(e){} }
  return ($w.text() || '').trim();
}

// Set value into a multiline control (plain or rich)
function nxSetMultiline(jsVar, html, isRich){
  var $w = NWF$('#' + jsVar);
  if(!$w.length) return false;
  var changed = false;
  var $ta = $w.is('textarea') ? $w : $w.find('textarea').first();

  if (isRich){
    var $if = $w.find('iframe').first();
    if ($if.length){ try { $if.contents().find('body').html(html); changed = true; } catch(e){} }
    if ($ta.length){ $ta.val(html); changed = true; }
  } else {
    if ($ta.length){ $ta.val(html); changed = true; }
  }
  if (changed){ ($ta.length ? $ta : $w).change(); }
  return changed;
}

// Remove all occurrences of a specific attachment link (and tidy wrappers)
function nxStripAttachmentFromHtml(html, fileUrl, filename){
  var wrap = document.createElement('div');
  wrap.innerHTML = html || '';

  // remove matching anchors and their closest <div> wrapper (if present)
  Array.from(wrap.querySelectorAll('a')).forEach(function(a){
    var href = (a.getAttribute('href') || '').trim();
    var text = (a.textContent || '').trim();
    var match = (href === fileUrl) || (href.endsWith('/' + filename)) || (text === filename);
    if (match){
      var parentDiv = a.closest('div');
      if (parentDiv && parentDiv.parentNode){ parentDiv.parentNode.removeChild(parentDiv); }
      else if (a.parentNode){ a.parentNode.removeChild(a); }
    }
  });

  // remove empty divs (no text and no anchors)
  Array.from(wrap.querySelectorAll('div')).forEach(function(d){
    var hasAnchor = d.querySelector('a');
    var text = (d.textContent || '').replace(/\s+/g,'').trim();
    if (!hasAnchor && !text && d.parentNode) d.parentNode.removeChild(d);
  });

  // remove empty tables (common in your markup)
  Array.from(wrap.querySelectorAll('table')).forEach(function(t){
    var hasAnchor = t.querySelector('a');
    var text = (t.textContent || '').replace(/\s+/g,'').trim();
    if (!hasAnchor && !text && t.parentNode) t.parentNode.removeChild(t);
  });

  return wrap.innerHTML;
}

// Convenience: remove deleted file from a rich-text control
function nxRemoveAttachmentHtml(richJsVar, fileUrl){
  var filename = String(fileUrl || '').split('/').pop();
  var current = nxGetMultiline(richJsVar);
  var updated = nxStripAttachmentFromHtml(current, fileUrl, filename);
  nxSetMultiline(richJsVar, updated, true); // true = Rich Text
}

