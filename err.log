private isPreview(): boolean {
  // from prop
  var p: any = (this.props as any).preview;
  if (typeof p === 'string') {
    var s = p.toLowerCase();
    if (s === 'true' || s === '1' || s === 'yes') return true;
    if (s === 'false' || s === '0' || s === 'no') return false;
  }
  if (typeof p === 'boolean') return p === true;

  // fallback: ?preview=1|true
  var qs = (window.location.search || '').replace(/^\?/, '').split('&');
  for (var i = 0; i < qs.length; i++) {
    var kv = qs[i].split('=');
    if (decodeURIComponent(kv[0]) === 'preview') {
      var v = kv.length > 1 ? decodeURIComponent(kv[1]).toLowerCase() : '';
      return v === '1' || v === 'true' || v === 'yes';
    }
  }
  return false;
}